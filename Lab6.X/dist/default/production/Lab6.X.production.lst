

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 08:22:44 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211     071A                     __pidataBANK0:
   212                           
   213                           ;initializer for _menu
   214     071A  3445               	retlw	69
   215     071B  346C               	retlw	108
   216     071C  3469               	retlw	105
   217     071D  3467               	retlw	103
   218     071E  3465               	retlw	101
   219     071F  3420               	retlw	32
   220     0720  3475               	retlw	117
   221     0721  346E               	retlw	110
   222     0722  3461               	retlw	97
   223     0723  3420               	retlw	32
   224     0724  346F               	retlw	111
   225     0725  3470               	retlw	112
   226     0726  3463               	retlw	99
   227     0727  3469               	retlw	105
   228     0728  346F               	retlw	111
   229     0729  346E               	retlw	110
   230     072A  340A               	retlw	10
   231     072B  340D               	retlw	13
   232     072C  3431               	retlw	49
   233     072D  3420               	retlw	32
   234     072E  342D               	retlw	45
   235     072F  3420               	retlw	32
   236     0730  344C               	retlw	76
   237     0731  3465               	retlw	101
   238     0732  3465               	retlw	101
   239     0733  3472               	retlw	114
   240     0734  3420               	retlw	32
   241     0735  3450               	retlw	80
   242     0736  346F               	retlw	111
   243     0737  3474               	retlw	116
   244     0738  3465               	retlw	101
   245     0739  346E               	retlw	110
   246     073A  3463               	retlw	99
   247     073B  3469               	retlw	105
   248     073C  346F               	retlw	111
   249     073D  346D               	retlw	109
   250     073E  3465               	retlw	101
   251     073F  3474               	retlw	116
   252     0740  3472               	retlw	114
   253     0741  346F               	retlw	111
   254     0742  340A               	retlw	10
   255     0743  340D               	retlw	13
   256     0744  3432               	retlw	50
   257     0745  3420               	retlw	32
   258     0746  342D               	retlw	45
   259     0747  3420               	retlw	32
   260     0748  3445               	retlw	69
   261     0749  346E               	retlw	110
   262     074A  3476               	retlw	118
   263     074B  3469               	retlw	105
   264     074C  3461               	retlw	97
   265     074D  3472               	retlw	114
   266     074E  3420               	retlw	32
   267     074F  3441               	retlw	65
   268     0750  3453               	retlw	83
   269     0751  3443               	retlw	67
   270     0752  3449               	retlw	73
   271     0753  3449               	retlw	73
   272     0754  340A               	retlw	10
   273     0755  340A               	retlw	10
   274     0756  340D               	retlw	13
   275     0018                     _RCSTAbits	set	24
   276     000B                     _INTCONbits	set	11
   277     0006                     _PORTB	set	6
   278     0008                     _PORTD	set	8
   279     001A                     _RCREG	set	26
   280     000C                     _PIR1bits	set	12
   281     001E                     _ADRESH	set	30
   282     001F                     _ADCON0bits	set	31
   283     0019                     _TXREG	set	25
   284     0066                     _ADIF	set	102
   285     009F                     _ADCON1bits	set	159
   286     0085                     _TRISAbits	set	133
   287     0099                     _SPBRG	set	153
   288     008C                     _PIE1bits	set	140
   289     008F                     _OSCCONbits	set	143
   290     0088                     _TRISD	set	136
   291     0086                     _TRISB	set	134
   292     0098                     _TXSTAbits	set	152
   293     0188                     _ANSELbits	set	392
   294     0189                     _ANSELH	set	393
   295                           
   296                           	psect	cinit
   297     07E9                     start_initialization:	
   298                           ; #config settings
   299                           
   300     07E9                     __initialization:
   301                           
   302                           ; Initialize objects allocated to BANK0
   303     07E9  1383               	bcf	3,7	;select IRP bank0
   304     07EA  305D               	movlw	low (__pdataBANK0+61)
   305     07EB  00FD               	movwf	btemp+-1
   306     07EC  3007               	movlw	high __pidataBANK0
   307     07ED  00FE               	movwf	btemp
   308     07EE  301A               	movlw	low __pidataBANK0
   309     07EF  00FF               	movwf	btemp+1
   310     07F0  3020               	movlw	low __pdataBANK0
   311     07F1  0084               	movwf	4
   312     07F2  120A  118A  26EB  120A  118A  	fcall	init_ram0
   313                           
   314                           ; Clear objects allocated to COMMON
   315     07F7  01F0               	clrf	__pbssCOMMON& (0+127)
   316     07F8  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   317     07F9  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   318     07FA  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   319     07FB  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   320     07FC                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323     07FC                     __end_of__initialization:
   324     07FC  0183               	clrf	3
   325     07FD  120A  118A  2F57   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328     0070                     __pbssCOMMON:
   329     0070                     _letra:
   330     0070                     	ds	2
   331     0072                     _bandera:
   332     0072                     	ds	2
   333     0074                     _VAL_ADC:
   334     0074                     	ds	1
   335                           
   336                           	psect	dataBANK0
   337     0020                     __pdataBANK0:
   338     0020                     _menu:
   339     0020                     	ds	61
   340                           
   341                           	psect	inittext
   342     06E7                     init_fetch0:	
   343                           ;	Called with low address in FSR and high address in W
   344                           
   345     06E7  087E               	movf	btemp,w
   346     06E8  008A               	movwf	10
   347     06E9  087F               	movf	btemp+1,w
   348     06EA  0082               	movwf	2
   349     06EB                     init_ram0:	
   350                           ;Called with:
   351                           ;	high address of idata address in btemp 
   352                           ;	low address of idata address in btemp+1 
   353                           ;	low address of data in FSR
   354                           ;	high address + 1 of data in btemp-1
   355                           
   356     06EB  120A  118A  26E7  120A  118A  	fcall	init_fetch0
   357     06F0  0080               	movwf	0
   358     06F1  0A84               	incf	4,f
   359     06F2  0804               	movf	4,w
   360     06F3  067D               	xorwf	btemp+-1,w
   361     06F4  1903               	btfsc	3,2
   362     06F5  3400               	retlw	0
   363     06F6  0AFF               	incf	btemp+1,f
   364     06F7  1903               	btfsc	3,2
   365     06F8  0AFE               	incf	btemp,f
   366     06F9  2EEB               	goto	init_ram0
   367                           
   368                           	psect	cstackCOMMON
   369     0075                     __pcstackCOMMON:
   370     0075                     ?_setup:
   371     0075                     ??_setup:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0075                     ?_initUART:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0075                     ??_initUART:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0075                     ?_setupADC:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0075                     ??_setupADC:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0075                     ?_main:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391     0075                     	ds	1
   392     0076                     ??_main:
   393                           
   394                           ; 1 bytes @ 0x1
   395     0076                     	ds	3
   396                           
   397                           	psect	maintext
   398     0757                     __pmaintext:	
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 90 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          3       0       0       0       0
   421 ;;      Totals:         3       0       0       0       0
   422 ;;Total ram usage:        3 bytes
   423 ;; Hardware stack levels required when called: 1
   424 ;; This function calls:
   425 ;;		_initUART
   426 ;;		_setup
   427 ;;		_setupADC
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433     0757                     _main:	
   434                           ;psect for function _main
   435                           
   436     0757                     l710:	
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   439                           
   440                           
   441                           ;main.c: 92:     setup();
   442     0757  120A  118A  26D4  120A  118A  	fcall	_setup
   443                           
   444                           ;main.c: 93:     initUART();
   445     075C  120A  118A  26C3  120A  118A  	fcall	_initUART
   446                           
   447                           ;main.c: 94:     setupADC();
   448     0761  120A  118A  26FA  120A  118A  	fcall	_setupADC
   449     0766  2F84               	goto	l718
   450     0767                     l63:
   451                           
   452                           ;main.c: 133:         {;main.c: 134:             if(TXSTAbits.TRMT == 1)
   453     0767  1683               	bsf	3,5	;RP0=1, select bank1
   454     0768  1303               	bcf	3,6	;RP1=0, select bank1
   455     0769  1C98               	btfss	24,1	;volatile
   456     076A  2F6C               	goto	u11
   457     076B  2F6D               	goto	u10
   458     076C                     u11:
   459     076C  2F84               	goto	l718
   460     076D                     u10:
   461     076D                     l712:
   462                           
   463                           ;main.c: 135:             {;main.c: 136:                 TXREG = menu[letra];
   464     076D  0870               	movf	_letra,w
   465     076E  3E20               	addlw	(low (_menu| 0))& (0+255)
   466     076F  0084               	movwf	4
   467     0770  1383               	bcf	3,7	;select IRP bank0
   468     0771  0800               	movf	0,w
   469     0772  1283               	bcf	3,5	;RP0=0, select bank0
   470     0773  1303               	bcf	3,6	;RP1=0, select bank0
   471     0774  0099               	movwf	25	;volatile
   472     0775                     l714:
   473                           
   474                           ;main.c: 137:                 letra ++;
   475     0775  3001               	movlw	1
   476     0776  07F0               	addwf	_letra,f
   477     0777  1803               	skipnc
   478     0778  0AF1               	incf	_letra+1,f
   479     0779  3000               	movlw	0
   480     077A  07F1               	addwf	_letra+1,f
   481     077B                     l716:
   482                           
   483                           ;main.c: 138:                 _delay((unsigned long)((10)*(8000000/4000.0)));
   484     077B  301A               	movlw	26
   485     077C  00F7               	movwf	??_main+1
   486     077D  30F8               	movlw	248
   487     077E  00F6               	movwf	??_main
   488     077F                     u107:
   489     077F  0BF6               	decfsz	??_main,f
   490     0780  2F7F               	goto	u107
   491     0781  0BF7               	decfsz	??_main+1,f
   492     0782  2F7F               	goto	u107
   493     0783  0000               	nop
   494     0784                     l718:
   495                           
   496                           ;main.c: 132:         while (letra < 62)
   497     0784  0871               	movf	_letra+1,w
   498     0785  3A80               	xorlw	128
   499     0786  00FF               	movwf	btemp+1
   500     0787  3080               	movlw	128
   501     0788  027F               	subwf	btemp+1,w
   502     0789  1D03               	skipz
   503     078A  2F8D               	goto	u25
   504     078B  303E               	movlw	62
   505     078C  0270               	subwf	_letra,w
   506     078D                     u25:
   507     078D  1C03               	skipc
   508     078E  2F90               	goto	u21
   509     078F  2F91               	goto	u20
   510     0790                     u21:
   511     0790  2F67               	goto	l63
   512     0791                     u20:
   513     0791  2FDB               	goto	l736
   514     0792                     l67:
   515                           
   516                           ;main.c: 143:             {;main.c: 144:                 ADCON0bits.GO = 1;
   517     0792  1283               	bcf	3,5	;RP0=0, select bank0
   518     0793  1303               	bcf	3,6	;RP1=0, select bank0
   519     0794  149F               	bsf	31,1	;volatile
   520     0795                     l68:	
   521                           ;main.c: 145:                 while(ADCON0bits.GO == 1){;}
   522                           
   523     0795  189F               	btfsc	31,1	;volatile
   524     0796  2F98               	goto	u31
   525     0797  2F99               	goto	u30
   526     0798                     u31:
   527     0798  2F95               	goto	l68
   528     0799                     u30:
   529     0799                     l70:
   530                           
   531                           ;main.c: 146:                 ADIF = 0;
   532     0799  130C               	bcf	12,6	;volatile
   533     079A                     l720:
   534                           
   535                           ;main.c: 147:                 VAL_ADC = ADRESH;
   536     079A  081E               	movf	30,w	;volatile
   537     079B  00F4               	movwf	_VAL_ADC
   538                           
   539                           ;main.c: 148:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   540     079C  3042               	movlw	66
   541     079D  00F6               	movwf	??_main
   542     079E                     u117:
   543     079E  0BF6               	decfsz	??_main,f
   544     079F  2F9E               	goto	u117
   545     07A0  0000               	nop
   546     07A1                     l722:
   547                           
   548                           ;main.c: 150:                 if(PIR1bits.RCIF == 1)
   549     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   550     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   551     07A3  1E8C               	btfss	12,5	;volatile
   552     07A4  2FA6               	goto	u41
   553     07A5  2FA7               	goto	u40
   554     07A6                     u41:
   555     07A6  2FDB               	goto	l736
   556     07A7                     u40:
   557     07A7                     l724:
   558                           
   559                           ;main.c: 151:                 {;main.c: 152:                     if (RCREG == '1')
   560     07A7  3031               	movlw	49
   561     07A8  061A               	xorwf	26,w	;volatile
   562     07A9  1D03               	btfss	3,2
   563     07AA  2FAC               	goto	u51
   564     07AB  2FAD               	goto	u50
   565     07AC                     u51:
   566     07AC  2FC6               	goto	l728
   567     07AD                     u50:
   568     07AD                     l726:
   569                           
   570                           ;main.c: 153:                     {;main.c: 154:                         TXREG = VAL_ADC
      +                          ;
   571     07AD  0874               	movf	_VAL_ADC,w
   572     07AE  0099               	movwf	25	;volatile
   573                           
   574                           ;main.c: 155:                         _delay((unsigned long)((100)*(8000000/4000.0)));
   575     07AF  3002               	movlw	2
   576     07B0  00F8               	movwf	??_main+2
   577     07B1  3004               	movlw	4
   578     07B2  00F7               	movwf	??_main+1
   579     07B3  30BA               	movlw	186
   580     07B4  00F6               	movwf	??_main
   581     07B5                     u127:
   582     07B5  0BF6               	decfsz	??_main,f
   583     07B6  2FB5               	goto	u127
   584     07B7  0BF7               	decfsz	??_main+1,f
   585     07B8  2FB5               	goto	u127
   586     07B9  0BF8               	decfsz	??_main+2,f
   587     07BA  2FB5               	goto	u127
   588     07BB  0000               	nop
   589                           
   590                           ;main.c: 157:                         TXREG = 10;
   591     07BC  300A               	movlw	10
   592     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   593     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   594     07BF  0099               	movwf	25	;volatile
   595                           
   596                           ;main.c: 158:                         TXREG = 13;
   597     07C0  300D               	movlw	13
   598     07C1  0099               	movwf	25	;volatile
   599                           
   600                           ;main.c: 159:                         bandera = 1;
   601     07C2  3001               	movlw	1
   602     07C3  00F2               	movwf	_bandera
   603     07C4  3000               	movlw	0
   604     07C5  00F3               	movwf	_bandera+1
   605     07C6                     l728:
   606                           
   607                           ;main.c: 161:                     if (RCREG == '2')
   608     07C6  3032               	movlw	50
   609     07C7  061A               	xorwf	26,w	;volatile
   610     07C8  1D03               	btfss	3,2
   611     07C9  2FCB               	goto	u61
   612     07CA  2FCC               	goto	u60
   613     07CB                     u61:
   614     07CB  2FDB               	goto	l736
   615     07CC                     u60:
   616     07CC                     l74:
   617     07CC  1E8C               	btfss	12,5	;volatile
   618     07CD  2FCF               	goto	u71
   619     07CE  2FD0               	goto	u70
   620     07CF                     u71:
   621     07CF  2FCC               	goto	l74
   622     07D0                     u70:
   623     07D0                     l76:
   624                           
   625                           ;main.c: 164:                         if(PIR1bits.RCIF == 1)
   626     07D0  1E8C               	btfss	12,5	;volatile
   627     07D1  2FD3               	goto	u81
   628     07D2  2FD4               	goto	u80
   629     07D3                     u81:
   630     07D3  2FD7               	goto	l77
   631     07D4                     u80:
   632     07D4                     l732:
   633                           
   634                           ;main.c: 165:                         {;main.c: 166:                             PORTD =
      +                           RCREG;
   635     07D4  081A               	movf	26,w	;volatile
   636     07D5  0088               	movwf	8	;volatile
   637     07D6                     l734:
   638                           
   639                           ;main.c: 167:                             PIR1bits.RCIF = 0;
   640     07D6  128C               	bcf	12,5	;volatile
   641     07D7                     l77:	
   642                           ;main.c: 168:                         }
   643                           
   644                           
   645                           ;main.c: 169:                         bandera = 1;
   646     07D7  3001               	movlw	1
   647     07D8  00F2               	movwf	_bandera
   648     07D9  3000               	movlw	0
   649     07DA  00F3               	movwf	_bandera+1
   650     07DB                     l736:
   651                           
   652                           ;main.c: 142:             while (bandera == 0)
   653     07DB  0872               	movf	_bandera,w
   654     07DC  0473               	iorwf	_bandera+1,w
   655     07DD  1903               	btfsc	3,2
   656     07DE  2FE0               	goto	u91
   657     07DF  2FE1               	goto	u90
   658     07E0                     u91:
   659     07E0  2F92               	goto	l67
   660     07E1                     u90:
   661     07E1                     l738:
   662                           
   663                           ;main.c: 173:             bandera = 0;
   664     07E1  01F2               	clrf	_bandera
   665     07E2  01F3               	clrf	_bandera+1
   666                           
   667                           ;main.c: 174:             letra = 0;
   668     07E3  01F0               	clrf	_letra
   669     07E4  01F1               	clrf	_letra+1
   670     07E5  2F84               	goto	l718
   671     07E6  120A  118A  2800   	ljmp	start
   672     07E9                     __end_of_main:
   673                           
   674                           	psect	text1
   675     06FA                     __ptext1:	
   676 ;; *************** function _setupADC *****************
   677 ;; Defined at:
   678 ;;		line 259 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          1       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     06FA                     _setupADC:	
   706                           ;psect for function _setupADC
   707                           
   708     06FA                     l706:	
   709                           ;incstack = 0
   710                           ; Regs used in _setupADC: [wreg]
   711                           
   712                           
   713                           ;main.c: 263:     TRISAbits.TRISA0 = 1;
   714     06FA  1683               	bsf	3,5	;RP0=1, select bank1
   715     06FB  1303               	bcf	3,6	;RP1=0, select bank1
   716     06FC  1405               	bsf	5,0	;volatile
   717                           
   718                           ;main.c: 264:     ANSELbits.ANS0 = 1;
   719     06FD  1683               	bsf	3,5	;RP0=1, select bank3
   720     06FE  1703               	bsf	3,6	;RP1=1, select bank3
   721     06FF  1408               	bsf	8,0	;volatile
   722                           
   723                           ;main.c: 268:     ADCON0bits.ADCS0 = 1;
   724     0700  1283               	bcf	3,5	;RP0=0, select bank0
   725     0701  1303               	bcf	3,6	;RP1=0, select bank0
   726     0702  171F               	bsf	31,6	;volatile
   727                           
   728                           ;main.c: 269:     ADCON0bits.ADCS1 = 0;
   729     0703  139F               	bcf	31,7	;volatile
   730                           
   731                           ;main.c: 271:     ADCON1bits.VCFG0 = 0;
   732     0704  1683               	bsf	3,5	;RP0=1, select bank1
   733     0705  1303               	bcf	3,6	;RP1=0, select bank1
   734     0706  121F               	bcf	31,4	;volatile
   735                           
   736                           ;main.c: 272:     ADCON1bits.VCFG1 = 0;
   737     0707  129F               	bcf	31,5	;volatile
   738                           
   739                           ;main.c: 274:     ADCON0bits.CHS0 = 0;
   740     0708  1283               	bcf	3,5	;RP0=0, select bank0
   741     0709  1303               	bcf	3,6	;RP1=0, select bank0
   742     070A  111F               	bcf	31,2	;volatile
   743                           
   744                           ;main.c: 275:     ADCON0bits.CHS1 = 0;
   745     070B  119F               	bcf	31,3	;volatile
   746                           
   747                           ;main.c: 276:     ADCON0bits.CHS2 = 0;
   748     070C  121F               	bcf	31,4	;volatile
   749                           
   750                           ;main.c: 277:     ADCON0bits.CHS3 = 0;
   751     070D  129F               	bcf	31,5	;volatile
   752                           
   753                           ;main.c: 279:     ADCON1bits.ADFM = 0;
   754     070E  1683               	bsf	3,5	;RP0=1, select bank1
   755     070F  1303               	bcf	3,6	;RP1=0, select bank1
   756     0710  139F               	bcf	31,7	;volatile
   757                           
   758                           ;main.c: 281:     ADCON0bits.ADON = 1;
   759     0711  1283               	bcf	3,5	;RP0=0, select bank0
   760     0712  1303               	bcf	3,6	;RP1=0, select bank0
   761     0713  141F               	bsf	31,0	;volatile
   762     0714                     l708:
   763                           
   764                           ;main.c: 283:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   765     0714  3042               	movlw	66
   766     0715  00F5               	movwf	??_setupADC
   767     0716                     u137:
   768     0716  0BF5               	decfsz	??_setupADC,f
   769     0717  2F16               	goto	u137
   770     0718  0000               	nop
   771     0719                     l90:
   772     0719  0008               	return
   773     071A                     __end_of_setupADC:
   774                           
   775                           	psect	text2
   776     06D4                     __ptext2:	
   777 ;; *************** function _setup *****************
   778 ;; Defined at:
   779 ;;		line 182 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806     06D4                     _setup:	
   807                           ;psect for function _setup
   808                           
   809     06D4                     l682:	
   810                           ;incstack = 0
   811                           ; Regs used in _setup: [wreg+status,2+status,0]
   812                           
   813                           
   814                           ;main.c: 184:     ANSELH = 0;
   815     06D4  1683               	bsf	3,5	;RP0=1, select bank3
   816     06D5  1703               	bsf	3,6	;RP1=1, select bank3
   817     06D6  0189               	clrf	9	;volatile
   818                           
   819                           ;main.c: 186:     TRISB = 0;
   820     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   821     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   822     06D9  0186               	clrf	6	;volatile
   823                           
   824                           ;main.c: 187:     TRISD = 0;
   825     06DA  0188               	clrf	8	;volatile
   826                           
   827                           ;main.c: 189:     PORTB = 0;
   828     06DB  1283               	bcf	3,5	;RP0=0, select bank0
   829     06DC  1303               	bcf	3,6	;RP1=0, select bank0
   830     06DD  0186               	clrf	6	;volatile
   831                           
   832                           ;main.c: 190:     PORTD = 0;
   833     06DE  0188               	clrf	8	;volatile
   834     06DF                     l684:
   835                           
   836                           ;main.c: 194:     OSCCONbits.IRCF = 0b111 ;
   837     06DF  3070               	movlw	112
   838     06E0  1683               	bsf	3,5	;RP0=1, select bank1
   839     06E1  1303               	bcf	3,6	;RP1=0, select bank1
   840     06E2  048F               	iorwf	15,f	;volatile
   841     06E3                     l686:
   842                           
   843                           ;main.c: 195:     OSCCONbits.SCS = 1;
   844     06E3  140F               	bsf	15,0	;volatile
   845     06E4                     l688:
   846                           
   847                           ;main.c: 197:     INTCONbits.GIE = 1;
   848     06E4  178B               	bsf	11,7	;volatile
   849     06E5                     l690:
   850                           
   851                           ;main.c: 198:     PIE1bits.RCIE = 1;
   852     06E5  168C               	bsf	12,5	;volatile
   853     06E6                     l84:
   854     06E6  0008               	return
   855     06E7                     __end_of_setup:
   856                           
   857                           	psect	text3
   858     06C3                     __ptext3:	
   859 ;; *************** function _initUART *****************
   860 ;; Defined at:
   861 ;;		line 202 in file "main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888     06C3                     _initUART:	
   889                           ;psect for function _initUART
   890                           
   891     06C3                     l692:	
   892                           ;incstack = 0
   893                           ; Regs used in _initUART: [wreg]
   894                           
   895                           
   896                           ;main.c: 206:     SPBRG = 12;
   897     06C3  300C               	movlw	12
   898     06C4  1683               	bsf	3,5	;RP0=1, select bank1
   899     06C5  1303               	bcf	3,6	;RP1=0, select bank1
   900     06C6  0099               	movwf	25	;volatile
   901     06C7                     l694:
   902                           
   903                           ;main.c: 210:     TXSTAbits.SYNC = 0;
   904     06C7  1218               	bcf	24,4	;volatile
   905     06C8                     l696:
   906                           
   907                           ;main.c: 211:     RCSTAbits.SPEN = 1;
   908     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   909     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   910     06CA  1798               	bsf	24,7	;volatile
   911     06CB                     l698:
   912                           
   913                           ;main.c: 217:     TXSTAbits.TXEN = 1;
   914     06CB  1683               	bsf	3,5	;RP0=1, select bank1
   915     06CC  1303               	bcf	3,6	;RP1=0, select bank1
   916     06CD  1698               	bsf	24,5	;volatile
   917     06CE                     l700:
   918                           
   919                           ;main.c: 219:     PIR1bits.TXIF = 0;
   920     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   921     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   922     06D0  120C               	bcf	12,4	;volatile
   923     06D1                     l702:
   924                           
   925                           ;main.c: 221:     RCSTAbits.CREN = 1;
   926     06D1  1618               	bsf	24,4	;volatile
   927     06D2                     l704:
   928                           
   929                           ;main.c: 223:     PIR1bits.RCIF = 0;
   930     06D2  128C               	bcf	12,5	;volatile
   931     06D3                     l87:
   932     06D3  0008               	return
   933     06D4                     __end_of_initUART:
   934     007E                     btemp	set	126	;btemp
   935     007E                     wtemp0	set	126
   936                           
   937                           	psect	idloc
   938                           
   939                           ;Config register IDLOC0 @ 0x2000
   940                           ;	unspecified, using default values
   941     2000                     	org	8192
   942     2000  3FFF               	dw	16383
   943                           
   944                           ;Config register IDLOC1 @ 0x2001
   945                           ;	unspecified, using default values
   946     2001                     	org	8193
   947     2001  3FFF               	dw	16383
   948                           
   949                           ;Config register IDLOC2 @ 0x2002
   950                           ;	unspecified, using default values
   951     2002                     	org	8194
   952     2002  3FFF               	dw	16383
   953                           
   954                           ;Config register IDLOC3 @ 0x2003
   955                           ;	unspecified, using default values
   956     2003                     	org	8195
   957     2003  3FFF               	dw	16383
   958                           
   959                           	psect	config
   960                           
   961                           ;Config register CONFIG1 @ 0x2007
   962                           ;	Oscillator Selection bits
   963                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   964                           ;	Watchdog Timer Enable bit
   965                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   966                           ;	Power-up Timer Enable bit
   967                           ;	PWRTE = OFF, PWRT disabled
   968                           ;	RE3/MCLR pin function select bit
   969                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   970                           ;	Code Protection bit
   971                           ;	CP = OFF, Program memory code protection is disabled
   972                           ;	Data Code Protection bit
   973                           ;	CPD = OFF, Data memory code protection is disabled
   974                           ;	Brown Out Reset Selection bits
   975                           ;	BOREN = OFF, BOR disabled
   976                           ;	Internal External Switchover bit
   977                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   978                           ;	Fail-Safe Clock Monitor Enabled bit
   979                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   980                           ;	Low Voltage Programming Enable bit
   981                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   982                           ;	In-Circuit Debugger Mode bit
   983                           ;	DEBUG = 0x1, unprogramme   984     2007                     	org	8199
   985     2007  20D4               	dw	8404
   986                           
   987                           ;Config register CONFIG2 @ 0x2008
   988                           ;	Brown-out Reset Selection bit
   989                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   990                           ;	Flash Program Memory Self Write Enable bits
   991                           ;	WRT = OFF, Write protection off
   992     2008                     	org	8200
   993     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        61
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      0      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              1 COMMON     3     3      0
                           _initUART
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 08:22:44 2022

                      pc 0002                       l70 0799                       l63 0767  
                     l90 0719                       l74 07CC                       l67 0792  
                     l84 06E6                       l76 07D0                       l68 0795  
                     l77 07D7                       l87 06D3                       u10 076D  
                     u11 076C                       u20 0791                       u21 0790  
                     u30 0799                       u31 0798                       u40 07A7  
                     u41 07A6                       u25 078D                       u50 07AD  
                     u51 07AC                       u60 07CC                       u61 07CB  
                     u70 07D0                       u71 07CF                       u80 07D4  
                     u81 07D3                       u90 07E1                       u91 07E0  
                     fsr 0004                      l700 06CE                      l702 06D1  
                    l710 0757                      l704 06D2                      l720 079A  
                    l712 076D                      l706 06FA                      l722 07A1  
                    l714 0775                      l708 0714                      l732 07D4  
                    l724 07A7                      l716 077B                      l734 07D6  
                    l726 07AD                      l718 0784                      l728 07C6  
                    l736 07DB                      l690 06E5                      l682 06D4  
                    l738 07E1                      l692 06C3                      l684 06DF  
                    l694 06C7                      l686 06E3                      l696 06C8  
                    l688 06E4                      l698 06CB                      u107 077F  
                    u117 079E                      u127 07B5                      u137 0716  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   _main 0757                     _menu 0020                     btemp 007E  
                   start 0000                    ?_main 0075                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _letra 0070                    _setup 06D4                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E9  
           __end_of_main 07E9                   ??_main 0076                   _ADRESH 001E  
                 ?_setup 0075                   _ANSELH 0189         __end_of_initUART 06D4  
       __end_of_setupADC 071A  __end_of__initialization 07FC           __pcstackCOMMON 0075  
           __pidataBANK0 071A            __end_of_setup 06E7                  ??_setup 0075  
             __pmaintext 0757                  _VAL_ADC 0074                ?_initUART 0075  
              ?_setupADC 0075                  _bandera 0072                _ANSELbits 0188  
                __ptext1 06FA                  __ptext2 06D4                  __ptext3 06C3  
   end_of_initialization 07FC               ??_initUART 0075               ??_setupADC 0075  
              _RCSTAbits 0018                _TRISAbits 0085                _TXSTAbits 0098  
    start_initialization 07E9               init_fetch0 06E7              __pdataBANK0 0020  
            __pbssCOMMON 0070                ___latbits 0002                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _initUART 06C3                 _setupADC 06FA               _INTCONbits 000B  
               init_ram0 06EB               _OSCCONbits 008F  
