

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 25 08:55:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataCOMMON
   213     0719                     __pidataCOMMON:
   214                           
   215                           ;initializer for _c
   216     0719  340C               	retlw	12
   217     071A  3400               	retlw	0
   218                           
   219                           	psect	idataBANK0
   220     071B                     __pidataBANK0:
   221                           
   222                           ;initializer for _cadena
   223     071B  3448               	retlw	72
   224     071C  346F               	retlw	111
   225     071D  346C               	retlw	108
   226     071E  3461               	retlw	97
   227     071F  3420               	retlw	32
   228     0720  344D               	retlw	77
   229     0721  3475               	retlw	117
   230     0722  346E               	retlw	110
   231     0723  3464               	retlw	100
   232     0724  346F               	retlw	111
   233     0018                     _RCSTAbits	set	24
   234     000B                     _INTCONbits	set	11
   235     001A                     _RCREG	set	26
   236     0008                     _PORTD	set	8
   237     000C                     _PIR1bits	set	12
   238     0006                     _PORTB	set	6
   239     0019                     _TXREG	set	25
   240     0099                     _SPBRG	set	153
   241     008C                     _PIE1bits	set	140
   242     008F                     _OSCCONbits	set	143
   243     0088                     _TRISD	set	136
   244     0086                     _TRISB	set	134
   245     0098                     _TXSTAbits	set	152
   246     0189                     _ANSELH	set	393
   247                           
   248                           	psect	cinit
   249     07DF                     start_initialization:	
   250                           ; #config settings
   251                           
   252     07DF                     __initialization:
   253                           
   254                           ; Initialize objects allocated to BANK0
   255     07DF  1383               	bcf	3,7	;select IRP bank0
   256     07E0  302A               	movlw	low (__pdataBANK0+10)
   257     07E1  00FD               	movwf	btemp+-1
   258     07E2  3007               	movlw	high __pidataBANK0
   259     07E3  00FE               	movwf	btemp
   260     07E4  301B               	movlw	low __pidataBANK0
   261     07E5  00FF               	movwf	btemp+1
   262     07E6  3020               	movlw	low __pdataBANK0
   263     07E7  0084               	movwf	4
   264     07E8  120A  118A  274D  120A  118A  	fcall	init_ram0
   265                           
   266                           ; Initialize objects allocated to COMMON
   267     07ED  120A  118A  2719  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   268     07F2  00F8               	movwf	__pdataCOMMON& (0+127)
   269     07F3  120A  118A  271A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   270     07F8  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   271                           
   272                           ; Clear objects allocated to COMMON
   273     07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   274     07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   275     07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   276     07FC                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279     07FC                     __end_of__initialization:
   280     07FC  0183               	clrf	3
   281     07FD  120A  118A  2F5C   	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMMON
   284     0075                     __pbssCOMMON:
   285     0075                     _i:
   286     0075                     	ds	2
   287     0077                     _letra:
   288     0077                     	ds	1
   289                           
   290                           	psect	dataCOMMON
   291     0078                     __pdataCOMMON:
   292     0078                     _c:
   293     0078                     	ds	2
   294                           
   295                           	psect	dataBANK0
   296     0020                     __pdataBANK0:
   297     0020                     _cadena:
   298     0020                     	ds	10
   299                           
   300                           	psect	inittext
   301     0749                     init_fetch0:	
   302                           ;	Called with low address in FSR and high address in W
   303                           
   304     0749  087E               	movf	btemp,w
   305     074A  008A               	movwf	10
   306     074B  087F               	movf	btemp+1,w
   307     074C  0082               	movwf	2
   308     074D                     init_ram0:	
   309                           ;Called with:
   310                           ;	high address of idata address in btemp 
   311                           ;	low address of idata address in btemp+1 
   312                           ;	low address of data in FSR
   313                           ;	high address + 1 of data in btemp-1
   314                           
   315     074D  120A  118A  2749  120A  118A  	fcall	init_fetch0
   316     0752  0080               	movwf	0
   317     0753  0A84               	incf	4,f
   318     0754  0804               	movf	4,w
   319     0755  067D               	xorwf	btemp+-1,w
   320     0756  1903               	btfsc	3,2
   321     0757  3400               	retlw	0
   322     0758  0AFF               	incf	btemp+1,f
   323     0759  1903               	btfsc	3,2
   324     075A  0AFE               	incf	btemp,f
   325     075B  2F4D               	goto	init_ram0
   326                           
   327                           	psect	cstackCOMMON
   328     0070                     __pcstackCOMMON:
   329     0070                     ?_setup:
   330     0070                     ??_setup:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_initUART:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_initUART:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_Hola_Mundo:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ??_Hola_Mundo:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     Hola_Mundo@i:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 2 bytes @ 0x0
   353     0070                     	ds	2
   354     0072                     ??_main:
   355                           
   356                           ; 1 bytes @ 0x2
   357     0072                     	ds	3
   358                           
   359                           	psect	maintext
   360     075C                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 75 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          3       0       0       0       0
   383 ;;      Totals:         3       0       0       0       0
   384 ;;Total ram usage:        3 bytes
   385 ;; Hardware stack levels required when called: 1
   386 ;; This function calls:
   387 ;;		_Hola_Mundo
   388 ;;		_initUART
   389 ;;		_setup
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395     075C                     _main:	
   396                           ;psect for function _main
   397                           
   398     075C                     l757:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 77:     setup();
   404     075C  120A  118A  2736  120A  118A  	fcall	_setup
   405                           
   406                           ;main.c: 78:     initUART();
   407     0761  120A  118A  2725  120A  118A  	fcall	_initUART
   408     0766                     l759:
   409                           
   410                           ;main.c: 99:         Hola_Mundo();
   411     0766  120A  118A  278E  120A  118A  	fcall	_Hola_Mundo
   412     076B                     l761:
   413                           
   414                           ;main.c: 101:         if(TXSTAbits.TRMT == 1)
   415     076B  1683               	bsf	3,5	;RP0=1, select bank1
   416     076C  1303               	bcf	3,6	;RP1=0, select bank1
   417     076D  1C98               	btfss	24,1	;volatile
   418     076E  2F70               	goto	u131
   419     076F  2F71               	goto	u130
   420     0770                     u131:
   421     0770  2F75               	goto	l765
   422     0771                     u130:
   423     0771                     l763:
   424                           
   425                           ;main.c: 102:         {;main.c: 103:             TXREG = PORTB;
   426     0771  1283               	bcf	3,5	;RP0=0, select bank0
   427     0772  1303               	bcf	3,6	;RP1=0, select bank0
   428     0773  0806               	movf	6,w	;volatile
   429     0774  0099               	movwf	25	;volatile
   430     0775                     l765:
   431                           
   432                           ;main.c: 106:         if(PIR1bits.RCIF == 1)
   433     0775  1283               	bcf	3,5	;RP0=0, select bank0
   434     0776  1E8C               	btfss	12,5	;volatile
   435     0777  2F79               	goto	u141
   436     0778  2F7A               	goto	u140
   437     0779                     u141:
   438     0779  2F7D               	goto	l51
   439     077A                     u140:
   440     077A                     l767:
   441                           
   442                           ;main.c: 107:         {;main.c: 108:             PORTD = RCREG;
   443     077A  081A               	movf	26,w	;volatile
   444     077B  0088               	movwf	8	;volatile
   445     077C                     l769:
   446                           
   447                           ;main.c: 109:             PIR1bits.RCIF = 0;
   448     077C  128C               	bcf	12,5	;volatile
   449     077D                     l51:	
   450                           ;main.c: 110:         }
   451                           
   452                           
   453                           ;main.c: 112:         _delay((unsigned long)((100)*(8000000/4000.0)));
   454     077D  3002               	movlw	2
   455     077E  00F4               	movwf	??_main+2
   456     077F  3004               	movlw	4
   457     0780  00F3               	movwf	??_main+1
   458     0781  30BA               	movlw	186
   459     0782  00F2               	movwf	??_main
   460     0783                     u157:
   461     0783  0BF2               	decfsz	??_main,f
   462     0784  2F83               	goto	u157
   463     0785  0BF3               	decfsz	??_main+1,f
   464     0786  2F83               	goto	u157
   465     0787  0BF4               	decfsz	??_main+2,f
   466     0788  2F83               	goto	u157
   467     0789  0000               	nop
   468     078A  2F66               	goto	l759
   469     078B  120A  118A  2800   	ljmp	start
   470     078E                     __end_of_main:
   471                           
   472                           	psect	text1
   473     0736                     __ptext1:	
   474 ;; *************** function _setup *****************
   475 ;; Defined at:
   476 ;;		line 121 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     0736                     _setup:	
   504                           ;psect for function _setup
   505                           
   506     0736                     l663:	
   507                           ;incstack = 0
   508                           ; Regs used in _setup: [wreg+status,2+status,0]
   509                           
   510                           
   511                           ;main.c: 123:     ANSELH = 0;
   512     0736  1683               	bsf	3,5	;RP0=1, select bank3
   513     0737  1703               	bsf	3,6	;RP1=1, select bank3
   514     0738  0189               	clrf	9	;volatile
   515                           
   516                           ;main.c: 125:     TRISB = 0;
   517     0739  1683               	bsf	3,5	;RP0=1, select bank1
   518     073A  1303               	bcf	3,6	;RP1=0, select bank1
   519     073B  0186               	clrf	6	;volatile
   520                           
   521                           ;main.c: 126:     TRISD = 0;
   522     073C  0188               	clrf	8	;volatile
   523                           
   524                           ;main.c: 128:     PORTB = 0;
   525     073D  1283               	bcf	3,5	;RP0=0, select bank0
   526     073E  1303               	bcf	3,6	;RP1=0, select bank0
   527     073F  0186               	clrf	6	;volatile
   528                           
   529                           ;main.c: 129:     PORTD = 0;
   530     0740  0188               	clrf	8	;volatile
   531     0741                     l665:
   532                           
   533                           ;main.c: 133:     OSCCONbits.IRCF = 0b111 ;
   534     0741  3070               	movlw	112
   535     0742  1683               	bsf	3,5	;RP0=1, select bank1
   536     0743  1303               	bcf	3,6	;RP1=0, select bank1
   537     0744  048F               	iorwf	15,f	;volatile
   538     0745                     l667:
   539                           
   540                           ;main.c: 134:     OSCCONbits.SCS = 1;
   541     0745  140F               	bsf	15,0	;volatile
   542     0746                     l669:
   543                           
   544                           ;main.c: 136:     INTCONbits.GIE = 1;
   545     0746  178B               	bsf	11,7	;volatile
   546     0747                     l671:
   547                           
   548                           ;main.c: 137:     PIE1bits.RCIE = 1;
   549     0747  168C               	bsf	12,5	;volatile
   550     0748                     l57:
   551     0748  0008               	return
   552     0749                     __end_of_setup:
   553                           
   554                           	psect	text2
   555     0725                     __ptext2:	
   556 ;; *************** function _initUART *****************
   557 ;; Defined at:
   558 ;;		line 141 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585     0725                     _initUART:	
   586                           ;psect for function _initUART
   587                           
   588     0725                     l673:	
   589                           ;incstack = 0
   590                           ; Regs used in _initUART: [wreg]
   591                           
   592                           
   593                           ;main.c: 145:     SPBRG = 12;
   594     0725  300C               	movlw	12
   595     0726  1683               	bsf	3,5	;RP0=1, select bank1
   596     0727  1303               	bcf	3,6	;RP1=0, select bank1
   597     0728  0099               	movwf	25	;volatile
   598     0729                     l675:
   599                           
   600                           ;main.c: 149:     TXSTAbits.SYNC = 0;
   601     0729  1218               	bcf	24,4	;volatile
   602     072A                     l677:
   603                           
   604                           ;main.c: 150:     RCSTAbits.SPEN = 1;
   605     072A  1283               	bcf	3,5	;RP0=0, select bank0
   606     072B  1303               	bcf	3,6	;RP1=0, select bank0
   607     072C  1798               	bsf	24,7	;volatile
   608     072D                     l679:
   609                           
   610                           ;main.c: 156:     TXSTAbits.TXEN = 1;
   611     072D  1683               	bsf	3,5	;RP0=1, select bank1
   612     072E  1303               	bcf	3,6	;RP1=0, select bank1
   613     072F  1698               	bsf	24,5	;volatile
   614     0730                     l681:
   615                           
   616                           ;main.c: 158:     PIR1bits.TXIF = 0;
   617     0730  1283               	bcf	3,5	;RP0=0, select bank0
   618     0731  1303               	bcf	3,6	;RP1=0, select bank0
   619     0732  120C               	bcf	12,4	;volatile
   620     0733                     l683:
   621                           
   622                           ;main.c: 160:     RCSTAbits.CREN = 1;
   623     0733  1618               	bsf	24,4	;volatile
   624     0734                     l685:
   625                           
   626                           ;main.c: 162:     PIR1bits.RCIF = 0;
   627     0734  128C               	bcf	12,5	;volatile
   628     0735                     l60:
   629     0735  0008               	return
   630     0736                     __end_of_initUART:
   631                           
   632                           	psect	text3
   633     078E                     __ptext3:	
   634 ;; *************** function _Hola_Mundo *****************
   635 ;; Defined at:
   636 ;;		line 165 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  i               2    0[COMMON] int 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         2       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         2       0       0       0       0
   654 ;;Total ram usage:        2 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663     078E                     _Hola_Mundo:	
   664                           ;psect for function _Hola_Mundo
   665                           
   666     078E                     l729:	
   667                           ;incstack = 0
   668                           ; Regs used in _Hola_Mundo: [wreg-fsr0h+status,2+status,0+btemp+1]
   669                           
   670                           
   671                           ;main.c: 167:     if (c == 12)
   672     078E  300C               	movlw	12
   673     078F  0678               	xorwf	_c,w
   674     0790  0479               	iorwf	_c+1,w
   675     0791  1D03               	btfss	3,2
   676     0792  2F94               	goto	u81
   677     0793  2F95               	goto	u80
   678     0794                     u81:
   679     0794  2F98               	goto	l733
   680     0795                     u80:
   681     0795                     l731:
   682                           
   683                           ;main.c: 168:         {;main.c: 169:             c = 0;
   684     0795  01F8               	clrf	_c
   685     0796  01F9               	clrf	_c+1
   686                           
   687                           ;main.c: 170:         }
   688     0797  2F9E               	goto	l735
   689     0798                     l733:
   690                           
   691                           ;main.c: 173:         {;main.c: 174:             c++;
   692     0798  3001               	movlw	1
   693     0799  07F8               	addwf	_c,f
   694     079A  1803               	skipnc
   695     079B  0AF9               	incf	_c+1,f
   696     079C  3000               	movlw	0
   697     079D  07F9               	addwf	_c+1,f
   698     079E                     l735:
   699                           
   700                           ;main.c: 177:         for (int i = 0; i < 10; i++)
   701     079E  01F0               	clrf	Hola_Mundo@i
   702     079F  01F1               	clrf	Hola_Mundo@i+1
   703     07A0                     l741:
   704                           
   705                           ;main.c: 178:         {;main.c: 179:             if (c <= 10)
   706     07A0  0879               	movf	_c+1,w
   707     07A1  3A80               	xorlw	128
   708     07A2  00FF               	movwf	btemp+1
   709     07A3  3080               	movlw	128
   710     07A4  027F               	subwf	btemp+1,w
   711     07A5  1D03               	skipz
   712     07A6  2FA9               	goto	u95
   713     07A7  300B               	movlw	11
   714     07A8  0278               	subwf	_c,w
   715     07A9                     u95:
   716     07A9  1803               	skipnc
   717     07AA  2FAC               	goto	u91
   718     07AB  2FAD               	goto	u90
   719     07AC                     u91:
   720     07AC  2FB5               	goto	l745
   721     07AD                     u90:
   722     07AD                     l743:
   723                           
   724                           ;main.c: 180:             {;main.c: 181:                 PORTB = cadena[c];
   725     07AD  0878               	movf	_c,w
   726     07AE  3E20               	addlw	(low (_cadena| 0))& (0+255)
   727     07AF  0084               	movwf	4
   728     07B0  1383               	bcf	3,7	;select IRP bank0
   729     07B1  0800               	movf	0,w
   730     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   731     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   732     07B4  0086               	movwf	6	;volatile
   733     07B5                     l745:
   734                           
   735                           ;main.c: 184:             if (c == 11)
   736     07B5  300B               	movlw	11
   737     07B6  0678               	xorwf	_c,w
   738     07B7  0479               	iorwf	_c+1,w
   739     07B8  1D03               	btfss	3,2
   740     07B9  2FBB               	goto	u101
   741     07BA  2FBC               	goto	u100
   742     07BB                     u101:
   743     07BB  2FC0               	goto	l749
   744     07BC                     u100:
   745     07BC                     l747:
   746                           
   747                           ;main.c: 185:             {;main.c: 186:                 PORTB = 10;
   748     07BC  300A               	movlw	10
   749     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   750     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   751     07BF  0086               	movwf	6	;volatile
   752     07C0                     l749:
   753                           
   754                           ;main.c: 189:             if (c == 12)
   755     07C0  300C               	movlw	12
   756     07C1  0678               	xorwf	_c,w
   757     07C2  0479               	iorwf	_c+1,w
   758     07C3  1D03               	btfss	3,2
   759     07C4  2FC6               	goto	u111
   760     07C5  2FC7               	goto	u110
   761     07C6                     u111:
   762     07C6  2FCB               	goto	l753
   763     07C7                     u110:
   764     07C7                     l751:
   765                           
   766                           ;main.c: 190:             {;main.c: 191:                 PORTB = 13;
   767     07C7  300D               	movlw	13
   768     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   769     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   770     07CA  0086               	movwf	6	;volatile
   771     07CB                     l753:	
   772                           ;main.c: 192:             }
   773                           
   774                           
   775                           ;main.c: 195:         }
   776     07CB  3001               	movlw	1
   777     07CC  07F0               	addwf	Hola_Mundo@i,f
   778     07CD  1803               	skipnc
   779     07CE  0AF1               	incf	Hola_Mundo@i+1,f
   780     07CF  3000               	movlw	0
   781     07D0  07F1               	addwf	Hola_Mundo@i+1,f
   782     07D1                     l755:
   783     07D1  0871               	movf	Hola_Mundo@i+1,w
   784     07D2  3A80               	xorlw	128
   785     07D3  00FF               	movwf	btemp+1
   786     07D4  3080               	movlw	128
   787     07D5  027F               	subwf	btemp+1,w
   788     07D6  1D03               	skipz
   789     07D7  2FDA               	goto	u125
   790     07D8  300A               	movlw	10
   791     07D9  0270               	subwf	Hola_Mundo@i,w
   792     07DA                     u125:
   793     07DA  1C03               	skipc
   794     07DB  2FDD               	goto	u121
   795     07DC  2FDE               	goto	u120
   796     07DD                     u121:
   797     07DD  2FA0               	goto	l741
   798     07DE                     u120:
   799     07DE                     l71:
   800     07DE  0008               	return
   801     07DF                     __end_of_Hola_Mundo:
   802     007E                     btemp	set	126	;btemp
   803     007E                     wtemp0	set	126
   804                           
   805                           	psect	idloc
   806                           
   807                           ;Config register IDLOC0 @ 0x2000
   808                           ;	unspecified, using default values
   809     2000                     	org	8192
   810     2000  3FFF               	dw	16383
   811                           
   812                           ;Config register IDLOC1 @ 0x2001
   813                           ;	unspecified, using default values
   814     2001                     	org	8193
   815     2001  3FFF               	dw	16383
   816                           
   817                           ;Config register IDLOC2 @ 0x2002
   818                           ;	unspecified, using default values
   819     2002                     	org	8194
   820     2002  3FFF               	dw	16383
   821                           
   822                           ;Config register IDLOC3 @ 0x2003
   823                           ;	unspecified, using default values
   824     2003                     	org	8195
   825     2003  3FFF               	dw	16383
   826                           
   827                           	psect	config
   828                           
   829                           ;Config register CONFIG1 @ 0x2007
   830                           ;	Oscillator Selection bits
   831                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   832                           ;	Watchdog Timer Enable bit
   833                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   834                           ;	Power-up Timer Enable bit
   835                           ;	PWRTE = OFF, PWRT disabled
   836                           ;	RE3/MCLR pin function select bit
   837                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   838                           ;	Code Protection bit
   839                           ;	CP = OFF, Program memory code protection is disabled
   840                           ;	Data Code Protection bit
   841                           ;	CPD = OFF, Data memory code protection is disabled
   842                           ;	Brown Out Reset Selection bits
   843                           ;	BOREN = OFF, BOR disabled
   844                           ;	Internal External Switchover bit
   845                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   846                           ;	Fail-Safe Clock Monitor Enabled bit
   847                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   848                           ;	Low Voltage Programming Enable bit
   849                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   850                           ;	In-Circuit Debugger Mode bit
   851                           ;	DEBUG = 0x1, unprogramme   852     2007                     	org	8199
   853     2007  20D4               	dw	8404
   854                           
   855                           ;Config register CONFIG2 @ 0x2008
   856                           ;	Brown-out Reset Selection bit
   857                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   858                           ;	Flash Program Memory Self Write Enable bits
   859                           ;	WRT = OFF, Write protection off
   860     2008                     	org	8200
   861     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Hola_Mundo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      46
                                              2 COMMON     3     3      0
                         _Hola_Mundo
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hola_Mundo                                           2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Hola_Mundo
   _initUART
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 25 08:55:53 2022

                      _c 0078                        _i 0075                        pc 0002  
                     l51 077D                       l60 0735                       l71 07DE  
                     l57 0748                       u80 0795                       u81 0794  
                     u90 07AD                       u91 07AC                       u95 07A9  
                     fsr 0004                      l731 0795                      l741 07A0  
                    l733 0798                      l751 07C7                      l743 07AD  
                    l735 079E                      l671 0747                      l663 0736  
                    l753 07CB                      l745 07B5                      l729 078E  
                    l681 0730                      l673 0725                      l665 0741  
                    l761 076B                      l755 07D1                      l747 07BC  
                    l683 0733                      l675 0729                      l667 0745  
                    l763 0771                      l749 07C0                      l685 0734  
                    l677 072A                      l669 0746                      l765 0775  
                    l757 075C                      l679 072D                      l767 077A  
                    l759 0766                      l769 077C                      u100 07BC  
                    u101 07BB                      u110 07C7                      u111 07C6  
                    u120 07DE                      u121 07DD                      u130 0771  
                    u131 0770                      u140 077A                      u125 07DA  
                    u141 0779                      u157 0783                      fsr0 0004  
                    indf 0000              Hola_Mundo@i 0070                     _main 075C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _letra 0077                    _setup 0736  
                  pclath 000A               _Hola_Mundo 078E                    status 0003  
                  wtemp0 007E          __initialization 07DF             __end_of_main 078E  
                 ??_main 0072                   ?_setup 0070                   _ANSELH 0189  
                 _cadena 0020         __end_of_initUART 0736             __pdataCOMMON 0078  
__end_of__initialization 07FC              ?_Hola_Mundo 0070           __pcstackCOMMON 0070  
           __pidataBANK0 071B            __end_of_setup 0749                  ??_setup 0070  
             __pmaintext 075C                ?_initUART 0070                  __ptext1 0736  
                __ptext2 0725                  __ptext3 078E     end_of_initialization 07FC  
             ??_initUART 0070                _RCSTAbits 0018             ??_Hola_Mundo 0070  
              _TXSTAbits 0098            __pidataCOMMON 0719       __end_of_Hola_Mundo 07DF  
    start_initialization 07DF               init_fetch0 0749              __pdataBANK0 0020  
            __pbssCOMMON 0075                ___latbits 0002                 _PIE1bits 008C  
               _PIR1bits 000C                 _initUART 0725               _INTCONbits 000B  
               init_ram0 074D               _OSCCONbits 008F  
