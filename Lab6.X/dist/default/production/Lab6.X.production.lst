

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 22:53:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211     0718                     __pidataBANK0:
   212                           
   213                           ;initializer for _menu
   214     0718  3445               	retlw	69
   215     0719  346C               	retlw	108
   216     071A  3469               	retlw	105
   217     071B  3467               	retlw	103
   218     071C  3465               	retlw	101
   219     071D  3420               	retlw	32
   220     071E  3475               	retlw	117
   221     071F  346E               	retlw	110
   222     0720  3461               	retlw	97
   223     0721  3420               	retlw	32
   224     0722  346F               	retlw	111
   225     0723  3470               	retlw	112
   226     0724  3463               	retlw	99
   227     0725  3469               	retlw	105
   228     0726  346F               	retlw	111
   229     0727  346E               	retlw	110
   230     0728  340A               	retlw	10
   231     0729  340D               	retlw	13
   232     072A  3431               	retlw	49
   233     072B  3420               	retlw	32
   234     072C  342D               	retlw	45
   235     072D  3420               	retlw	32
   236     072E  344C               	retlw	76
   237     072F  3465               	retlw	101
   238     0730  3465               	retlw	101
   239     0731  3472               	retlw	114
   240     0732  3420               	retlw	32
   241     0733  3450               	retlw	80
   242     0734  346F               	retlw	111
   243     0735  3474               	retlw	116
   244     0736  3465               	retlw	101
   245     0737  346E               	retlw	110
   246     0738  3463               	retlw	99
   247     0739  3469               	retlw	105
   248     073A  346F               	retlw	111
   249     073B  346D               	retlw	109
   250     073C  3465               	retlw	101
   251     073D  3474               	retlw	116
   252     073E  3472               	retlw	114
   253     073F  346F               	retlw	111
   254     0740  340A               	retlw	10
   255     0741  340D               	retlw	13
   256     0742  3432               	retlw	50
   257     0743  3420               	retlw	32
   258     0744  342D               	retlw	45
   259     0745  3420               	retlw	32
   260     0746  3445               	retlw	69
   261     0747  346E               	retlw	110
   262     0748  3476               	retlw	118
   263     0749  3469               	retlw	105
   264     074A  3461               	retlw	97
   265     074B  3472               	retlw	114
   266     074C  3420               	retlw	32
   267     074D  3441               	retlw	65
   268     074E  3453               	retlw	83
   269     074F  3443               	retlw	67
   270     0750  3449               	retlw	73
   271     0751  3449               	retlw	73
   272     0752  340A               	retlw	10
   273     0753  3420               	retlw	32
   274     0754  340A               	retlw	10
   275     0755  340D               	retlw	13
   276     0018                     _RCSTAbits	set	24
   277     000B                     _INTCONbits	set	11
   278     0006                     _PORTB	set	6
   279     0008                     _PORTD	set	8
   280     001A                     _RCREG	set	26
   281     000C                     _PIR1bits	set	12
   282     001E                     _ADRESH	set	30
   283     001F                     _ADCON0bits	set	31
   284     0019                     _TXREG	set	25
   285     0066                     _ADIF	set	102
   286     009F                     _ADCON1bits	set	159
   287     0085                     _TRISAbits	set	133
   288     0099                     _SPBRG	set	153
   289     008C                     _PIE1bits	set	140
   290     008F                     _OSCCONbits	set	143
   291     0088                     _TRISD	set	136
   292     0086                     _TRISB	set	134
   293     0098                     _TXSTAbits	set	152
   294     0188                     _ANSELbits	set	392
   295     0189                     _ANSELH	set	393
   296                           
   297                           	psect	cinit
   298     07E9                     start_initialization:	
   299                           ; #config settings
   300                           
   301     07E9                     __initialization:
   302                           
   303                           ; Initialize objects allocated to BANK0
   304     07E9  1383               	bcf	3,7	;select IRP bank0
   305     07EA  305E               	movlw	low (__pdataBANK0+62)
   306     07EB  00FD               	movwf	btemp+-1
   307     07EC  3007               	movlw	high __pidataBANK0
   308     07ED  00FE               	movwf	btemp
   309     07EE  3018               	movlw	low __pidataBANK0
   310     07EF  00FF               	movwf	btemp+1
   311     07F0  3020               	movlw	low __pdataBANK0
   312     07F1  0084               	movwf	4
   313     07F2  120A  118A  26E9  120A  118A  	fcall	init_ram0
   314                           
   315                           ; Clear objects allocated to COMMON
   316     07F7  01F0               	clrf	__pbssCOMMON& (0+127)
   317     07F8  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   318     07F9  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   319     07FA  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   320     07FB  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   321     07FC                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324     07FC                     __end_of__initialization:
   325     07FC  0183               	clrf	3
   326     07FD  120A  118A  2F56   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMMON
   329     0070                     __pbssCOMMON:
   330     0070                     _letra:
   331     0070                     	ds	2
   332     0072                     _bandera:
   333     0072                     	ds	2
   334     0074                     _VAL_ADC:
   335     0074                     	ds	1
   336                           
   337                           	psect	dataBANK0
   338     0020                     __pdataBANK0:
   339     0020                     _menu:
   340     0020                     	ds	62
   341                           
   342                           	psect	inittext
   343     06E5                     init_fetch0:	
   344                           ;	Called with low address in FSR and high address in W
   345                           
   346     06E5  087E               	movf	btemp,w
   347     06E6  008A               	movwf	10
   348     06E7  087F               	movf	btemp+1,w
   349     06E8  0082               	movwf	2
   350     06E9                     init_ram0:	
   351                           ;Called with:
   352                           ;	high address of idata address in btemp 
   353                           ;	low address of idata address in btemp+1 
   354                           ;	low address of data in FSR
   355                           ;	high address + 1 of data in btemp-1
   356                           
   357     06E9  120A  118A  26E5  120A  118A  	fcall	init_fetch0
   358     06EE  0080               	movwf	0
   359     06EF  0A84               	incf	4,f
   360     06F0  0804               	movf	4,w
   361     06F1  067D               	xorwf	btemp+-1,w
   362     06F2  1903               	btfsc	3,2
   363     06F3  3400               	retlw	0
   364     06F4  0AFF               	incf	btemp+1,f
   365     06F5  1903               	btfsc	3,2
   366     06F6  0AFE               	incf	btemp,f
   367     06F7  2EE9               	goto	init_ram0
   368                           
   369                           	psect	cstackCOMMON
   370     0075                     __pcstackCOMMON:
   371     0075                     ?_setup:
   372     0075                     ??_setup:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0075                     ?_initUART:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0075                     ??_initUART:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0075                     ?_setupADC:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0075                     ??_setupADC:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0075                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 1 bytes @ 0x0
   392     0075                     	ds	1
   393     0076                     ??_main:
   394                           
   395                           ; 1 bytes @ 0x1
   396     0076                     	ds	3
   397                           
   398                           	psect	maintext
   399     0756                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 90 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          3       0       0       0       0
   422 ;;      Totals:         3       0       0       0       0
   423 ;;Total ram usage:        3 bytes
   424 ;; Hardware stack levels required when called: 1
   425 ;; This function calls:
   426 ;;		_initUART
   427 ;;		_setup
   428 ;;		_setupADC
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434     0756                     _main:	
   435                           ;psect for function _main
   436                           
   437     0756                     l710:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   440                           
   441                           
   442                           ;main.c: 92:     setup();
   443     0756  120A  118A  26D2  120A  118A  	fcall	_setup
   444                           
   445                           ;main.c: 93:     initUART();
   446     075B  120A  118A  26C1  120A  118A  	fcall	_initUART
   447                           
   448                           ;main.c: 94:     setupADC();
   449     0760  120A  118A  26F8  120A  118A  	fcall	_setupADC
   450     0765  2F83               	goto	l718
   451     0766                     l63:
   452                           
   453                           ;main.c: 133:         {;main.c: 134:             if(TXSTAbits.TRMT == 1)
   454     0766  1683               	bsf	3,5	;RP0=1, select bank1
   455     0767  1303               	bcf	3,6	;RP1=0, select bank1
   456     0768  1C98               	btfss	24,1	;volatile
   457     0769  2F6B               	goto	u11
   458     076A  2F6C               	goto	u10
   459     076B                     u11:
   460     076B  2F83               	goto	l718
   461     076C                     u10:
   462     076C                     l712:
   463                           
   464                           ;main.c: 135:             {;main.c: 136:                 TXREG = menu[letra];
   465     076C  0870               	movf	_letra,w
   466     076D  3E20               	addlw	(low (_menu| 0))& (0+255)
   467     076E  0084               	movwf	4
   468     076F  1383               	bcf	3,7	;select IRP bank0
   469     0770  0800               	movf	0,w
   470     0771  1283               	bcf	3,5	;RP0=0, select bank0
   471     0772  1303               	bcf	3,6	;RP1=0, select bank0
   472     0773  0099               	movwf	25	;volatile
   473     0774                     l714:
   474                           
   475                           ;main.c: 137:                 letra ++;
   476     0774  3001               	movlw	1
   477     0775  07F0               	addwf	_letra,f
   478     0776  1803               	skipnc
   479     0777  0AF1               	incf	_letra+1,f
   480     0778  3000               	movlw	0
   481     0779  07F1               	addwf	_letra+1,f
   482     077A                     l716:
   483                           
   484                           ;main.c: 138:                 _delay((unsigned long)((10)*(8000000/4000.0)));
   485     077A  301A               	movlw	26
   486     077B  00F7               	movwf	??_main+1
   487     077C  30F8               	movlw	248
   488     077D  00F6               	movwf	??_main
   489     077E                     u107:
   490     077E  0BF6               	decfsz	??_main,f
   491     077F  2F7E               	goto	u107
   492     0780  0BF7               	decfsz	??_main+1,f
   493     0781  2F7E               	goto	u107
   494     0782  0000               	nop
   495     0783                     l718:
   496                           
   497                           ;main.c: 132:         while (letra < 62)
   498     0783  0871               	movf	_letra+1,w
   499     0784  3A80               	xorlw	128
   500     0785  00FF               	movwf	btemp+1
   501     0786  3080               	movlw	128
   502     0787  027F               	subwf	btemp+1,w
   503     0788  1D03               	skipz
   504     0789  2F8C               	goto	u25
   505     078A  303E               	movlw	62
   506     078B  0270               	subwf	_letra,w
   507     078C                     u25:
   508     078C  1C03               	skipc
   509     078D  2F8F               	goto	u21
   510     078E  2F90               	goto	u20
   511     078F                     u21:
   512     078F  2F66               	goto	l63
   513     0790                     u20:
   514     0790  2FDB               	goto	l742
   515     0791                     l67:
   516                           
   517                           ;main.c: 143:             {;main.c: 144:                 ADCON0bits.GO = 1;
   518     0791  1283               	bcf	3,5	;RP0=0, select bank0
   519     0792  1303               	bcf	3,6	;RP1=0, select bank0
   520     0793  149F               	bsf	31,1	;volatile
   521     0794                     l68:	
   522                           ;main.c: 145:                 while(ADCON0bits.GO == 1){;}
   523                           
   524     0794  189F               	btfsc	31,1	;volatile
   525     0795  2F97               	goto	u31
   526     0796  2F98               	goto	u30
   527     0797                     u31:
   528     0797  2F94               	goto	l68
   529     0798                     u30:
   530     0798                     l70:
   531                           
   532                           ;main.c: 146:                 ADIF = 0;
   533     0798  130C               	bcf	12,6	;volatile
   534     0799                     l720:
   535                           
   536                           ;main.c: 147:                 VAL_ADC = ADRESH;
   537     0799  081E               	movf	30,w	;volatile
   538     079A  00F4               	movwf	_VAL_ADC
   539                           
   540                           ;main.c: 148:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   541     079B  3042               	movlw	66
   542     079C  00F6               	movwf	??_main
   543     079D                     u117:
   544     079D  0BF6               	decfsz	??_main,f
   545     079E  2F9D               	goto	u117
   546     079F  0000               	nop
   547     07A0                     l722:
   548                           
   549                           ;main.c: 150:                 if(PIR1bits.RCIF == 1)
   550     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   551     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   552     07A2  1E8C               	btfss	12,5	;volatile
   553     07A3  2FA5               	goto	u41
   554     07A4  2FA6               	goto	u40
   555     07A5                     u41:
   556     07A5  2FDB               	goto	l742
   557     07A6                     u40:
   558     07A6                     l724:
   559                           
   560                           ;main.c: 151:                 {;main.c: 152:                     if (RCREG == '1')
   561     07A6  3031               	movlw	49
   562     07A7  061A               	xorwf	26,w	;volatile
   563     07A8  1D03               	btfss	3,2
   564     07A9  2FAB               	goto	u51
   565     07AA  2FAC               	goto	u50
   566     07AB                     u51:
   567     07AB  2FC6               	goto	l72
   568     07AC                     u50:
   569     07AC                     l726:
   570                           
   571                           ;main.c: 153:                     {;main.c: 154:                         TXREG = (VAL_AD
      +                          C + 48);
   572     07AC  0874               	movf	_VAL_ADC,w
   573     07AD  3E30               	addlw	48
   574     07AE  0099               	movwf	25	;volatile
   575     07AF                     l728:
   576                           
   577                           ;main.c: 155:                         _delay((unsigned long)((100)*(8000000/4000.0)));
   578     07AF  3002               	movlw	2
   579     07B0  00F8               	movwf	??_main+2
   580     07B1  3004               	movlw	4
   581     07B2  00F7               	movwf	??_main+1
   582     07B3  30BA               	movlw	186
   583     07B4  00F6               	movwf	??_main
   584     07B5                     u127:
   585     07B5  0BF6               	decfsz	??_main,f
   586     07B6  2FB5               	goto	u127
   587     07B7  0BF7               	decfsz	??_main+1,f
   588     07B8  2FB5               	goto	u127
   589     07B9  0BF8               	decfsz	??_main+2,f
   590     07BA  2FB5               	goto	u127
   591     07BB  0000               	nop
   592     07BC                     l730:
   593                           
   594                           ;main.c: 157:                         TXREG = 10;
   595     07BC  300A               	movlw	10
   596     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   597     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   598     07BF  0099               	movwf	25	;volatile
   599     07C0                     l732:
   600                           
   601                           ;main.c: 158:                         TXREG = 13;
   602     07C0  300D               	movlw	13
   603     07C1  0099               	movwf	25	;volatile
   604     07C2                     l734:
   605                           
   606                           ;main.c: 159:                         bandera = 1;
   607     07C2  3001               	movlw	1
   608     07C3  00F2               	movwf	_bandera
   609     07C4  3000               	movlw	0
   610     07C5  00F3               	movwf	_bandera+1
   611     07C6                     l72:	
   612                           ;main.c: 160:                     }
   613                           
   614                           
   615                           ;main.c: 161:                     if (RCREG == '2')
   616     07C6  3032               	movlw	50
   617     07C7  061A               	xorwf	26,w	;volatile
   618     07C8  1D03               	btfss	3,2
   619     07C9  2FCB               	goto	u61
   620     07CA  2FCC               	goto	u60
   621     07CB                     u61:
   622     07CB  2FDB               	goto	l742
   623     07CC                     u60:
   624     07CC                     l74:
   625     07CC  1E8C               	btfss	12,5	;volatile
   626     07CD  2FCF               	goto	u71
   627     07CE  2FD0               	goto	u70
   628     07CF                     u71:
   629     07CF  2FCC               	goto	l74
   630     07D0                     u70:
   631     07D0                     l76:
   632                           
   633                           ;main.c: 164:                         if(PIR1bits.RCIF == 1)
   634     07D0  1E8C               	btfss	12,5	;volatile
   635     07D1  2FD3               	goto	u81
   636     07D2  2FD4               	goto	u80
   637     07D3                     u81:
   638     07D3  2FD7               	goto	l77
   639     07D4                     u80:
   640     07D4                     l738:
   641                           
   642                           ;main.c: 165:                         {;main.c: 166:                             PORTD =
      +                           RCREG;
   643     07D4  081A               	movf	26,w	;volatile
   644     07D5  0088               	movwf	8	;volatile
   645     07D6                     l740:
   646                           
   647                           ;main.c: 167:                             PIR1bits.RCIF = 0;
   648     07D6  128C               	bcf	12,5	;volatile
   649     07D7                     l77:	
   650                           ;main.c: 168:                         }
   651                           
   652                           
   653                           ;main.c: 169:                         bandera = 1;
   654     07D7  3001               	movlw	1
   655     07D8  00F2               	movwf	_bandera
   656     07D9  3000               	movlw	0
   657     07DA  00F3               	movwf	_bandera+1
   658     07DB                     l742:
   659                           
   660                           ;main.c: 142:             while (bandera == 0)
   661     07DB  0872               	movf	_bandera,w
   662     07DC  0473               	iorwf	_bandera+1,w
   663     07DD  1903               	btfsc	3,2
   664     07DE  2FE0               	goto	u91
   665     07DF  2FE1               	goto	u90
   666     07E0                     u91:
   667     07E0  2F91               	goto	l67
   668     07E1                     u90:
   669     07E1                     l744:
   670                           
   671                           ;main.c: 173:             bandera = 0;
   672     07E1  01F2               	clrf	_bandera
   673     07E2  01F3               	clrf	_bandera+1
   674                           
   675                           ;main.c: 174:             letra = 0;
   676     07E3  01F0               	clrf	_letra
   677     07E4  01F1               	clrf	_letra+1
   678     07E5  2F83               	goto	l718
   679     07E6  120A  118A  2800   	ljmp	start
   680     07E9                     __end_of_main:
   681                           
   682                           	psect	text1
   683     06F8                     __ptext1:	
   684 ;; *************** function _setupADC *****************
   685 ;; Defined at:
   686 ;;		line 259 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          1       0       0       0       0
   703 ;;      Totals:         1       0       0       0       0
   704 ;;Total ram usage:        1 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     06F8                     _setupADC:	
   714                           ;psect for function _setupADC
   715                           
   716     06F8                     l706:	
   717                           ;incstack = 0
   718                           ; Regs used in _setupADC: [wreg]
   719                           
   720                           
   721                           ;main.c: 263:     TRISAbits.TRISA0 = 1;
   722     06F8  1683               	bsf	3,5	;RP0=1, select bank1
   723     06F9  1303               	bcf	3,6	;RP1=0, select bank1
   724     06FA  1405               	bsf	5,0	;volatile
   725                           
   726                           ;main.c: 264:     ANSELbits.ANS0 = 1;
   727     06FB  1683               	bsf	3,5	;RP0=1, select bank3
   728     06FC  1703               	bsf	3,6	;RP1=1, select bank3
   729     06FD  1408               	bsf	8,0	;volatile
   730                           
   731                           ;main.c: 268:     ADCON0bits.ADCS0 = 1;
   732     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   733     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   734     0700  171F               	bsf	31,6	;volatile
   735                           
   736                           ;main.c: 269:     ADCON0bits.ADCS1 = 0;
   737     0701  139F               	bcf	31,7	;volatile
   738                           
   739                           ;main.c: 271:     ADCON1bits.VCFG0 = 0;
   740     0702  1683               	bsf	3,5	;RP0=1, select bank1
   741     0703  1303               	bcf	3,6	;RP1=0, select bank1
   742     0704  121F               	bcf	31,4	;volatile
   743                           
   744                           ;main.c: 272:     ADCON1bits.VCFG1 = 0;
   745     0705  129F               	bcf	31,5	;volatile
   746                           
   747                           ;main.c: 274:     ADCON0bits.CHS0 = 0;
   748     0706  1283               	bcf	3,5	;RP0=0, select bank0
   749     0707  1303               	bcf	3,6	;RP1=0, select bank0
   750     0708  111F               	bcf	31,2	;volatile
   751                           
   752                           ;main.c: 275:     ADCON0bits.CHS1 = 0;
   753     0709  119F               	bcf	31,3	;volatile
   754                           
   755                           ;main.c: 276:     ADCON0bits.CHS2 = 0;
   756     070A  121F               	bcf	31,4	;volatile
   757                           
   758                           ;main.c: 277:     ADCON0bits.CHS3 = 0;
   759     070B  129F               	bcf	31,5	;volatile
   760                           
   761                           ;main.c: 279:     ADCON1bits.ADFM = 0;
   762     070C  1683               	bsf	3,5	;RP0=1, select bank1
   763     070D  1303               	bcf	3,6	;RP1=0, select bank1
   764     070E  139F               	bcf	31,7	;volatile
   765                           
   766                           ;main.c: 281:     ADCON0bits.ADON = 1;
   767     070F  1283               	bcf	3,5	;RP0=0, select bank0
   768     0710  1303               	bcf	3,6	;RP1=0, select bank0
   769     0711  141F               	bsf	31,0	;volatile
   770     0712                     l708:
   771                           
   772                           ;main.c: 283:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   773     0712  3042               	movlw	66
   774     0713  00F5               	movwf	??_setupADC
   775     0714                     u137:
   776     0714  0BF5               	decfsz	??_setupADC,f
   777     0715  2F14               	goto	u137
   778     0716  0000               	nop
   779     0717                     l90:
   780     0717  0008               	return
   781     0718                     __end_of_setupADC:
   782                           
   783                           	psect	text2
   784     06D2                     __ptext2:	
   785 ;; *************** function _setup *****************
   786 ;; Defined at:
   787 ;;		line 182 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814     06D2                     _setup:	
   815                           ;psect for function _setup
   816                           
   817     06D2                     l682:	
   818                           ;incstack = 0
   819                           ; Regs used in _setup: [wreg+status,2+status,0]
   820                           
   821                           
   822                           ;main.c: 184:     ANSELH = 0;
   823     06D2  1683               	bsf	3,5	;RP0=1, select bank3
   824     06D3  1703               	bsf	3,6	;RP1=1, select bank3
   825     06D4  0189               	clrf	9	;volatile
   826                           
   827                           ;main.c: 186:     TRISB = 0;
   828     06D5  1683               	bsf	3,5	;RP0=1, select bank1
   829     06D6  1303               	bcf	3,6	;RP1=0, select bank1
   830     06D7  0186               	clrf	6	;volatile
   831                           
   832                           ;main.c: 187:     TRISD = 0;
   833     06D8  0188               	clrf	8	;volatile
   834                           
   835                           ;main.c: 189:     PORTB = 0;
   836     06D9  1283               	bcf	3,5	;RP0=0, select bank0
   837     06DA  1303               	bcf	3,6	;RP1=0, select bank0
   838     06DB  0186               	clrf	6	;volatile
   839                           
   840                           ;main.c: 190:     PORTD = 0;
   841     06DC  0188               	clrf	8	;volatile
   842     06DD                     l684:
   843                           
   844                           ;main.c: 194:     OSCCONbits.IRCF = 0b111 ;
   845     06DD  3070               	movlw	112
   846     06DE  1683               	bsf	3,5	;RP0=1, select bank1
   847     06DF  1303               	bcf	3,6	;RP1=0, select bank1
   848     06E0  048F               	iorwf	15,f	;volatile
   849     06E1                     l686:
   850                           
   851                           ;main.c: 195:     OSCCONbits.SCS = 1;
   852     06E1  140F               	bsf	15,0	;volatile
   853     06E2                     l688:
   854                           
   855                           ;main.c: 197:     INTCONbits.GIE = 1;
   856     06E2  178B               	bsf	11,7	;volatile
   857     06E3                     l690:
   858                           
   859                           ;main.c: 198:     PIE1bits.RCIE = 1;
   860     06E3  168C               	bsf	12,5	;volatile
   861     06E4                     l84:
   862     06E4  0008               	return
   863     06E5                     __end_of_setup:
   864                           
   865                           	psect	text3
   866     06C1                     __ptext3:	
   867 ;; *************** function _initUART *****************
   868 ;; Defined at:
   869 ;;		line 202 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     06C1                     _initUART:	
   897                           ;psect for function _initUART
   898                           
   899     06C1                     l692:	
   900                           ;incstack = 0
   901                           ; Regs used in _initUART: [wreg]
   902                           
   903                           
   904                           ;main.c: 206:     SPBRG = 12;
   905     06C1  300C               	movlw	12
   906     06C2  1683               	bsf	3,5	;RP0=1, select bank1
   907     06C3  1303               	bcf	3,6	;RP1=0, select bank1
   908     06C4  0099               	movwf	25	;volatile
   909     06C5                     l694:
   910                           
   911                           ;main.c: 210:     TXSTAbits.SYNC = 0;
   912     06C5  1218               	bcf	24,4	;volatile
   913     06C6                     l696:
   914                           
   915                           ;main.c: 211:     RCSTAbits.SPEN = 1;
   916     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   917     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   918     06C8  1798               	bsf	24,7	;volatile
   919     06C9                     l698:
   920                           
   921                           ;main.c: 217:     TXSTAbits.TXEN = 1;
   922     06C9  1683               	bsf	3,5	;RP0=1, select bank1
   923     06CA  1303               	bcf	3,6	;RP1=0, select bank1
   924     06CB  1698               	bsf	24,5	;volatile
   925     06CC                     l700:
   926                           
   927                           ;main.c: 219:     PIR1bits.TXIF = 0;
   928     06CC  1283               	bcf	3,5	;RP0=0, select bank0
   929     06CD  1303               	bcf	3,6	;RP1=0, select bank0
   930     06CE  120C               	bcf	12,4	;volatile
   931     06CF                     l702:
   932                           
   933                           ;main.c: 221:     RCSTAbits.CREN = 1;
   934     06CF  1618               	bsf	24,4	;volatile
   935     06D0                     l704:
   936                           
   937                           ;main.c: 223:     PIR1bits.RCIF = 0;
   938     06D0  128C               	bcf	12,5	;volatile
   939     06D1                     l87:
   940     06D1  0008               	return
   941     06D2                     __end_of_initUART:
   942     007E                     btemp	set	126	;btemp
   943     007E                     wtemp0	set	126
   944                           
   945                           	psect	idloc
   946                           
   947                           ;Config register IDLOC0 @ 0x2000
   948                           ;	unspecified, using default values
   949     2000                     	org	8192
   950     2000  3FFF               	dw	16383
   951                           
   952                           ;Config register IDLOC1 @ 0x2001
   953                           ;	unspecified, using default values
   954     2001                     	org	8193
   955     2001  3FFF               	dw	16383
   956                           
   957                           ;Config register IDLOC2 @ 0x2002
   958                           ;	unspecified, using default values
   959     2002                     	org	8194
   960     2002  3FFF               	dw	16383
   961                           
   962                           ;Config register IDLOC3 @ 0x2003
   963                           ;	unspecified, using default values
   964     2003                     	org	8195
   965     2003  3FFF               	dw	16383
   966                           
   967                           	psect	config
   968                           
   969                           ;Config register CONFIG1 @ 0x2007
   970                           ;	Oscillator Selection bits
   971                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   972                           ;	Watchdog Timer Enable bit
   973                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   974                           ;	Power-up Timer Enable bit
   975                           ;	PWRTE = OFF, PWRT disabled
   976                           ;	RE3/MCLR pin function select bit
   977                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   978                           ;	Code Protection bit
   979                           ;	CP = OFF, Program memory code protection is disabled
   980                           ;	Data Code Protection bit
   981                           ;	CPD = OFF, Data memory code protection is disabled
   982                           ;	Brown Out Reset Selection bits
   983                           ;	BOREN = OFF, BOR disabled
   984                           ;	Internal External Switchover bit
   985                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   986                           ;	Fail-Safe Clock Monitor Enabled bit
   987                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   988                           ;	Low Voltage Programming Enable bit
   989                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   990                           ;	In-Circuit Debugger Mode bit
   991                           ;	DEBUG = 0x1, unprogramme   992     2007                     	org	8199
   993     2007  20D4               	dw	8404
   994                           
   995                           ;Config register CONFIG2 @ 0x2008
   996                           ;	Brown-out Reset Selection bit
   997                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   998                           ;	Flash Program Memory Self Write Enable bits
   999                           ;	WRT = OFF, Write protection off
  1000     2008                     	org	8200
  1001     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        62
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       9
    BANK0            80      0      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              1 COMMON     3     3      0
                           _initUART
                              _setup
                           _setupADC
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup
   _setupADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      12        0.0%
ABS                  0      0      47       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 22:53:11 2022

                      pc 0002                       l70 0798                       l63 0766  
                     l72 07C6                       l90 0717                       l74 07CC  
                     l67 0791                       l84 06E4                       l76 07D0  
                     l68 0794                       l77 07D7                       l87 06D1  
                     u10 076C                       u11 076B                       u20 0790  
                     u21 078F                       u30 0798                       u31 0797  
                     u40 07A6                       u41 07A5                       u25 078C  
                     u50 07AC                       u51 07AB                       u60 07CC  
                     u61 07CB                       u70 07D0                       u71 07CF  
                     u80 07D4                       u81 07D3                       u90 07E1  
                     u91 07E0                       fsr 0004                      l700 06CC  
                    l702 06CF                      l710 0756                      l704 06D0  
                    l720 0799                      l712 076C                      l706 06F8  
                    l730 07BC                      l722 07A0                      l714 0774  
                    l708 0712                      l740 07D6                      l732 07C0  
                    l724 07A6                      l716 077A                      l734 07C2  
                    l726 07AC                      l742 07DB                      l718 0783  
                    l744 07E1                      l728 07AF                      l690 06E3  
                    l682 06D2                      l738 07D4                      l692 06C1  
                    l684 06DD                      l694 06C5                      l686 06E1  
                    l696 06C6                      l688 06E2                      l698 06C9  
                    u107 077E                      u117 079D                      u127 07B5  
                    u137 0714                      fsr0 0004                      indf 0000  
                   _ADIF 0066                     _main 0756                     _menu 0020  
                   btemp 007E                     start 0000                    ?_main 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _letra 0070                    _setup 06D2  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E9             __end_of_main 07E9                   ??_main 0076  
                 _ADRESH 001E                   ?_setup 0075                   _ANSELH 0189  
       __end_of_initUART 06D2         __end_of_setupADC 0718  __end_of__initialization 07FC  
         __pcstackCOMMON 0075             __pidataBANK0 0718            __end_of_setup 06E5  
                ??_setup 0075               __pmaintext 0756                  _VAL_ADC 0074  
              ?_initUART 0075                ?_setupADC 0075                  _bandera 0072  
              _ANSELbits 0188                  __ptext1 06F8                  __ptext2 06D2  
                __ptext3 06C1     end_of_initialization 07FC               ??_initUART 0075  
             ??_setupADC 0075                _RCSTAbits 0018                _TRISAbits 0085  
              _TXSTAbits 0098      start_initialization 07E9               init_fetch0 06E5  
            __pdataBANK0 0020              __pbssCOMMON 0070                ___latbits 0002  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F                 _initUART 06C1                 _setupADC 06F8  
             _INTCONbits 000B                 init_ram0 06E9               _OSCCONbits 008F  
